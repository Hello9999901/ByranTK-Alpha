#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define RAISE   1

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC       &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
                &kp GRAVE &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp MINUS &kp EQUAL         &kp BSPC
                &kp TAB     &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT &kp RBKT   &kp BSLH
                &kp CAPS      &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &kp SEMI &kp SQT         &kp RET     &kp PG_UP
                &kp LSHIFT       &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH   &kp RSHIFT &kp UP  &kp PG_DN
                &kp LCTRL  &kp LALT  &kp LGUI      &kp BSPC               &kp SPACE  &kp RGUI &mo RAISE &kp RCTRL &kp LEFT &kp DOWN &kp RIGHT
            >;
        };
        raise_layer {
            bindings = <
                &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp C_BRI_DN &kp C_BRI_UP &kp F6 &kp C_PREV &kp C_PP &kp C_NEXT &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP
                &bt BT_SEL 3 &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_N0  &trans &trans &trans
                &bt BT_SEL 4 &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans &trans   &trans
                &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans &trans         &trans     &trans
                &trans       &ext_power EP_OFF  &ext_power EP_ON  &trans  &trans  &trans  &trans  &trans  &trans &trans &trans   &trans &trans  &trans
                &trans  &trans  &trans      &trans               &trans  &trans &trans &trans &trans &trans &trans
            >;
        };
    };
};